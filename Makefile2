ROOT_PATH = ./

DOCKER_PROJECT_ROOT_PATH = /project_root

DOCKER_COMMAND = docker run -ti --rm -v $(shell pwd):/work -v $(shell pwd)/./:$(DOCKER_PROJECT_ROOT_PATH) -e USER_ID=$(shell id -u) -e GROUP_ID=$(shell id -g) shioyadan-sim-env-riscv-compiler:latest

CXX = $(DOCKER_COMMAND) riscv64-unknown-linux-gnu-g++
CXXFLAGS += -O2 -static -I$(DOCKER_PROJECT_ROOT_PATH)/source -I$(DOCKER_PROJECT_ROOT_PATH)/lib/glm -I$(DOCKER_PROJECT_ROOT_PATH)/lib/nlohmann -std=c++20
OBJDUMP = $(DOCKER_COMMAND) riscv64-unknown-linux-gnu-objdump

SRCS = main.cpp
SRCS += lib/glm/glm/detail/glm.cpp
SRCS += source/ray/interaction.cpp
SRCS += source/ray/ray.cpp
SRCS += source/main.cpp
SRCS += source/surface/quadric.cpp
SRCS += source/surface/sphere.cpp
SRCS += source/surface/triangle.cpp
SRCS += source/octree/octree.cpp
SRCS += source/octree/linear-octree.cpp
SRCS += source/integrator/photon-mapper/photon-mapper.cpp
SRCS += source/integrator/path-tracer/path-tracer.cpp
SRCS += source/integrator/integrator.cpp
SRCS += source/material/material.cpp
SRCS += source/material/fresnel.cpp
SRCS += source/material/ggx.cpp
SRCS += source/scene/scene.cpp
SRCS += source/common/util.cpp
SRCS += source/common/coordinate-system.cpp
SRCS += source/common/bounding-box.cpp
SRCS += source/common/format.cpp
SRCS += source/common/option.cpp
SRCS += source/common/histogram.cpp
SRCS += source/camera/film.cpp
SRCS += source/camera/camera.cpp
SRCS += source/camera/pixel-operators.cpp
SRCS += source/camera/image.cpp
SRCS += source/bvh/bvh.cpp

OBJS    = $(SRCS:.cpp=.o)

LIBDIR = $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm
LIBDIR += $(DOCKER_PROJECT_ROOT_PATH)/lib/nlohmann/nlohmann

LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/trigonometric.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_trigonometric.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_constants.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_double_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint1_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_int_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_exponential.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_packing.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_projection.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_clip_space.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double1_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_uint_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int1_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float1_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_ulp.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_float.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_ulp.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_float_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_double.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_geometric.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_float4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool1_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_packing.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/quaternion_transform.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_uint3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float4x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_bool4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_double2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x3_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int2x2_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/scalar_common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_transform.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float2x2_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double3x4_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_float3x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_int3x4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/vector_int4_sized.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_double2x3_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/ext/matrix_uint2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/matrix.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/fwd.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/compatibility.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/type_aligned.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/quaternion.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/texture.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/dual_quaternion.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/io.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/extended_min_max.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/euler_angles.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/scalar_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_interpolation.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/polar_coordinates.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/associated_min_max.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/normalize_dot.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/vector_angle.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/fast_exponential.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/transform2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/raw_data.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/closest_point.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/gradient_paint.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/string_cast.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/vec_swizzle.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_decompose.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/spline.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/projection.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/bit.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/intersect.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/color_space_YCoCg.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/vector_query.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/optimum_pow.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/rotate_vector.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/extend.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/scalar_multiplication.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/fast_trigonometry.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_cross_product.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/wrap.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_query.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/range.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_factorisation.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/orthonormalize.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_operation.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/mixed_product.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/fast_square_root.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_transform_2d.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/type_trait.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/exterior_product.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/std_based_type.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/handed_coordinate_space.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/easing.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/hash.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/matrix_major_storage.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/number_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/norm.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/normal.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/color_encoding.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/component_wise.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/log_base.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/color_space.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/rotate_normalized_axis.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/functions.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/transform.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtx/perpendicular.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/packing.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/geometric.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/compute_vector_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat2x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_vec2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_swizzle.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/qualifier.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_vectorize.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/compute_common.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat2x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat3x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_half.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_vec3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_vec4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_quat.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_float.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat4x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat3x4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat3x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_noise.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat4x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_vec1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_swizzle_func.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/type_mat4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_features.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/_fixes.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/setup.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/glm.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat4x3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/vector_relational.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/exponential.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/mat2x2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/vec3.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/vec2.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/vec4.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/type_aligned.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/quaternion.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/matrix_access.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/matrix_inverse.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/round.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/reciprocal.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/ulp.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/matrix_integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/packing.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/random.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/bitfield.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/type_precision.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/integer.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/constants.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/epsilon.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/matrix_transform.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/color_space.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/type_ptr.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/vec1.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/gtc/noise.hpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/glm/glm/detail/glm.cpp
LIBS += $(DOCKER_PROJECT_ROOT_PATH)/lib/nlohmann/nlohmann/json.hpp

INCDIR = -I$(DOCKER_PROJECT_ROOT_PATH)/lib/glm
INCDIR += -I$(DOCKER_PROJECT_ROOT_PATH)/lib/nlohmann

.PHONY: all clean

all: a.out dump.txt

a.out: $(OBJS)
	$(CXX) $(CXXFLAGS) -o $@ $< $(LIBDIR) $(LIBS)

$(OBJS): $(SRCS)
	$(CXX) $(CXXFLAGS) -c $(SRCS)

dump.txt: a.out
	$(OBJDUMP) -S $< > $@

clean:
	rm -f main.s a.out dump.txt
